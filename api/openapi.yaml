openapi: 3.1.0
info:
  title: Rhystic API
  version: '0.1.0'
  description: |
    REST API for Rhystic - A platform for remote table top gaming sessions.
    Handles user authentication, pod management, and WebRTC connection setup.

servers:
  - url: https://api.rhystic.io/v1
    description: Production server
  - url: https://staging.rhystic.io/v1
    description: Staging server
  - url: http://localhost:8000/v1
    description: Local development

security:
  - bearerAuth: []

tags:
  - name: auth
    description: Authentication operations
  - name: users
    description: User management
  - name: pods
    description: Pod management
  - name: rtc
    description: WebRTC connection management

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'

  /auth/token:
    post:
      tags:
        - auth
      summary: Get authentication token
      security: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/me:
    get:
      tags:
        - users
      summary: Get current user information
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /pods:
    get:
      tags:
        - pods
      summary: List all pods
      responses:
        '200':
          description: List of pods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pod'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - pods
      summary: Create a new pod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodCreate'
      responses:
        '201':
          description: Pod created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pod'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /pods/{podId}:
    parameters:
      - name: podId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - pods
      summary: Get pod details
      responses:
        '200':
          description: Pod details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pod'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /pods/{podId}/join:
    parameters:
      - name: podId
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - pods
        - rtc
      summary: Join a pod and establish WebRTC connection
      responses:
        '200':
          description: Connection details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodConnection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
      required:
        - id
        - username
        - email
        - created_at

    UserRegistration:
      type: object
      properties:
        username:
          type: string
          minLength: 3
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
      required:
        - username
        - email
        - password

    PodParticipant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        joined_at:
          type: string
          format: date-time
        left_at:
          type: string
          format: date-time
       

    Pod:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        owner_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        participants:
          type: array
          items:
            $ref: '#/components/schemas/PodParticipant'
      required:
        - id
        - name
        - owner_id
        - created_at
        - participants

    PodCreate:
      type: object
      properties:
        name:
          type: string
          minLength: 5
      required:
        - name

    PodConnection:
      type: object
      properties:
        iceServers:
          type: array
          items:
            $ref: '#/components/schemas/ICEServer'
        offer:
          type: string
          description: SDP offer for WebRTC connection
        answer:
          type: string
          description: SDP answer for WebRTC connection
        candidates:
          type: array
          items:
            type: object
            properties:
              candidate:
                type: string
              sdpMid:
                type: string
              sdpMLineIndex:
                type: integer
      required:
        - iceServers

    ICEServer:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
          description: Array of STUN/TURN server URLs
        username:
          type: string
          description: Username for TURN server authentication
        credential:
          type: string
          description: Credential for TURN server authentication
      required:
        - urls

    Token:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        token_type:
          type: string
          enum: [bearer]
          default: bearer
        expires_in:
          type: integer
          description: Token expiration time in seconds
      required:
        - access_token
        - token_type
        - expires_in

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
          additionalProperties: true
      required:
        - code
        - message

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT